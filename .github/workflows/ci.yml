name: CI/CD
permissions:
  contents: write
on:
  push:
    branches: 
      - main
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            ext: .exe
            os_arch: windows_amd64
            goos: windows
            goarch: amd64
          - os: ubuntu-latest
            ext: ""
            os_arch: linux_amd64
            goos: linux
            goarch: amd64
          - os: macos-latest
            ext: ""
            os_arch: darwin_amd64
            goos: darwin
            goarch: amd64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Config Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Build Provider
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: go build -o terraform-provider-vyosconfig${{ matrix.ext }} .

      - name: Set Version
        id: set_version
        shell: bash
        run: |
          if [[ "$GITHUB_REF" == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
            echo "VERSION=$VERSION" >> $GITHUB_ENV
            echo "IS_TAG=true" >> $GITHUB_ENV
          else
            VERSION="0.0.0-dev"
            echo "VERSION=$VERSION" >> $GITHUB_ENV
            echo "IS_TAG=false" >> $GITHUB_ENV
          fi

      - name: Prepare Release Files
        if: env.IS_TAG == 'true'
        shell: bash
        run: |
          mkdir -p terraform-registry.io/thyago01/vyosconfig/$VERSION/${{ matrix.os_arch }}
          cp terraform-provider-vyosconfig${{ matrix.ext }} terraform-registry.io/thyago01/vyosconfig/$VERSION/${{ matrix.os_arch }}/terraform-provider-vyosconfig_v$VERSION${{ matrix.ext }}
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            7z a -tzip terraform-provider-vyosconfig_${VERSION}_${{ matrix.os_arch }}.zip terraform-registry.io/
          else
            zip -r terraform-provider-vyosconfig_${VERSION}_${{ matrix.os_arch }}.zip terraform-registry.io/
          fi

      - name: Create Development Build
        if: env.IS_TAG == 'false'
        shell: bash
        run: |
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            7z a -tzip terraform-provider-vyosconfig_dev_${{ matrix.os_arch }}.zip terraform-provider-vyosconfig${{ matrix.ext }}
          else
            zip terraform-provider-vyosconfig_dev_${{ matrix.os_arch }}.zip terraform-provider-vyosconfig${{ matrix.ext }}
          fi

      - name: Upload Release Files
        uses: actions/upload-artifact@v4
        with:
          name: release-${{ matrix.os_arch }}
          path: terraform-provider-vyosconfig_*.zip
          if-no-files-found: error

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
          merge-multiple: false

      - name: Move Artifacts to Root
        run: |
          find ./artifacts -name "*.zip" -exec mv {} ./ \;
          ls -la

      - name: Extract Version
        id: extract_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "VERSION=$VERSION" # Apenas para debug


      - name: Create Manifest
        run: |
          cat > terraform-provider-vyosconfig_${VERSION}_manifest.json << EOF
          {
            "version": 1,
            "metadata": {
              "protocol_versions": ["6.0"]
            }
          }
          EOF

      - name: Setup GPG
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }} 
        run: |
          echo "$GPG_PRIVATE_KEY" | gpg --batch --passphrase "$GPG_PASSPHRASE" --import
          echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf
          gpgconf --kill gpg-agent

      - name: Generate SHA256SUMS
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }} 
        run: |
          sha256sum terraform-provider-vyosconfig_${VERSION}_*.zip terraform-provider-vyosconfig_${VERSION}_manifest.json > terraform-provider-vyosconfig_${VERSION}_SHA256SUMS
          echo "$GPG_PASSPHRASE" | gpg --batch --yes --passphrase-fd 0 --pinentry-mode loopback --detach-sign terraform-provider-vyosconfig_${VERSION}_SHA256SUMS
          ls -la terraform-provider-vyosconfig_${VERSION}_*

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            terraform-provider-vyosconfig_${{ env.VERSION }}_*.zip
            terraform-provider-vyosconfig_${{ env.VERSION }}_manifest.json
            terraform-provider-vyosconfig_${{ env.VERSION }}_SHA256SUMS
            terraform-provider-vyosconfig_${{ env.VERSION }}_SHA256SUMS.sig